substitutions:
  devicename: fan

esphome:
  name: $devicename
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Fan Fallback Hotspot"
    password: "12345678"

captive_portal:

mqtt:
  broker: !secret mqtt_ip
  username: !secret mqtt_user
  password: !secret mqtt_password
  client_id: $devicename

text_sensor:
  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
    state_topic: $devicename/uptime_text

sensor:
  - platform: ct_clamp
    sensor: adc_sensor
    name: "Current"
    update_interval: 10s
    unit_of_measurement: "A"
    id: current
    state_topic: $devicename/current
    filters:
      - calibrate_linear:
        - 0.0 -> 0
        - 0.096 -> 8.1
  - platform: adc
    pin: A0
    id: adc_sensor
  - platform: template
    name: "Power"
    id: "ct_power"
    lambda: return id(current).state * 240;
    accuracy_decimals: 0
    unit_of_measurement: "W"
    update_interval: 10s
    state_topic: $devicename/power
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 60s
    state_topic: $devicename/rssi
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    state_topic: $devicename/uptime
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
    filters:
      - lambda: return x / 60;
    unit_of_measurement: "m"

switch:
  - platform: gpio
    pin:
      number: D4
      inverted: true
    name: "IN1"
    id: switch_in1
  - platform: gpio
    pin: 
      number: D3
      inverted: true
    name: "IN2"
    id: switch_in2
  - platform: gpio
    pin: 
      number: D1
      inverted: true
    name: "IN3"
    id: switch_in3
  - platform: gpio
    pin: 
      number: D0
      inverted: true
    name: "IN4"
    id: switch_in4

web_server:
  port: 80



